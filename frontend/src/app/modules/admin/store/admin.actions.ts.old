import { createAction, props } from '@ngrx/store';
import { User } from '../../../store/auth/auth.interface';
import { Timeslot } from '../../../models/timeslot.model';
import { ActivityLog } from '../../../models/activity-log.model';

export interface DashboardData {
  totalUsers: number;
  totalClasses: number;
  totalRooms: number;
  pendingLeaves: number;
  recentActivities: {
    id: string;
    type: string;
    description: string;
    time: Date;
  }[];
}

// Dashboard Actions
export const loadDashboardData = createAction('[Admin] Load Dashboard Data');
export const loadDashboardDataSuccess = createAction(
  '[Admin] Load Dashboard Data Success',
  props<{ data: DashboardData }>()
);
export const loadDashboardDataFailure = createAction(
  '[Admin] Load Dashboard Data Failure',
  props<{ error: string }>()
);

// User Actions
export const getUsers = createAction('[Admin] Get Users');
export const getUsersSuccess = createAction(
  '[Admin] Get Users Success',
  props<{ users: User[] }>()
);
export const getUsersFailure = createAction(
  '[Admin] Get Users Failure',
  props<{ error: string }>()
);

export const addUser = createAction(
  '[Admin] Add User',
  props<{ user: User }>()
);

export const addUserSuccess = createAction(
  '[Admin] Add User Success',
  props<{ user: User }>()
);

export const addUserFailure = createAction(
  '[Admin] Add User Failure',
  props<{ error: string }>()
);

export const updateUser = createAction(
  '[Admin] Update User',
  props<{ id: string; changes: Partial<User> }>()
);

export const updateUserSuccess = createAction(
  '[Admin] Update User Success',
  props<{ user: User }>()
);

export const updateUserFailure = createAction(
  '[Admin] Update User Failure',
  props<{ error: string }>()
);

export const deleteUser = createAction(
  '[Admin] Delete User',
  props<{ id: string }>()
);

export const deleteUserSuccess = createAction(
  '[Admin] Delete User Success',
  props<{ id: string }>()
);

export const deleteUserFailure = createAction(
  '[Admin] Delete User Failure',
  props<{ error: string }>()
);

// Activity Logs Actions
export const loadActivityLogs = createAction('[Admin] Load Activity Logs');
export const loadActivityLogsSuccess = createAction(
  '[Admin] Load Activity Logs Success',
  props<{ logs: ActivityLog[] }>()
);
export const loadActivityLogsFailure = createAction(
  '[Admin] Load Activity Logs Failure',
  props<{ error: string }>()
);

// Timeslot Actions
export const loadTimeslots = createAction('[Admin] Load Timeslots');
export const loadTimeslotsSuccess = createAction(
  '[Admin] Load Timeslots Success',
  props<{ timeslots: Timeslot[] }>()
);
export const loadTimeslotsFailure = createAction(
  '[Admin] Load Timeslots Failure',
  props<{ error: string }>()
);

export const addTimeslot = createAction(
  '[Admin] Add Timeslot',
  props<{ timeslot: Timeslot }>()
);

export const updateTimeslot = createAction(
  '[Admin] Update Timeslot',
  props<{ id: string; changes: Partial<Timeslot> }>()
);

export const deleteTimeslot = createAction(
  '[Admin] Delete Timeslot',
  props<{ id: string }>()
);

// Leave Request Actions
export const loadLeaveRequests = createAction('[Admin] Load Leave Requests');
export const loadLeaveRequestsSuccess = createAction(
  '[Admin] Load Leave Requests Success',
  props<{ requests: any[] }>()
);
export const loadLeaveRequestsFailure = createAction(
  '[Admin] Load Leave Requests Failure',
  props<{ error: string }>()
);

export const approveLeaveRequest = createAction(
  '[Admin] Approve Leave Request',
  props<{ id: string }>()
);
export const approveLeaveRequestSuccess = createAction(
  '[Admin] Approve Leave Request Success',
  props<{ id: string }>()
);
export const approveLeaveRequestFailure = createAction(
  '[Admin] Approve Leave Request Failure',
  props<{ error: string }>()
);

export const rejectLeaveRequest = createAction(
  '[Admin] Reject Leave Request',
  props<{ id: string; rejectionReason: string }>()
);
export const rejectLeaveRequestSuccess = createAction(
  '[Admin] Reject Leave Request Success',
  props<{ id: string }>()
);
export const rejectLeaveRequestFailure = createAction(
  '[Admin] Reject Leave Request Failure',
  props<{ error: string }>()
);
